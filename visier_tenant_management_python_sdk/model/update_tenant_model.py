# coding: utf-8

"""
    Visier Tenant Management APIs

    Visier APIs for managing tenants

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from visier_tenant_management_python_sdk import schemas  # noqa: F401


class UpdateTenantModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            tenantDisplayName = schemas.StrSchema
            industryCode = schemas.Int32Schema
        
            @staticmethod
            def purchasedModules() -> typing.Type['UpdateTenantModelPurchasedModules']:
                return UpdateTenantModelPurchasedModules
        
            @staticmethod
            def embeddableDomains() -> typing.Type['UpdateTenantModelEmbeddableDomains']:
                return UpdateTenantModelEmbeddableDomains
        
            @staticmethod
            def customProperties() -> typing.Type['UpdateTenantModelCustomProperties']:
                return UpdateTenantModelCustomProperties
        
            @staticmethod
            def ssoInstanceIssuers() -> typing.Type['UpdateTenantModelSsoInstanceIssuers']:
                return UpdateTenantModelSsoInstanceIssuers
            __annotations__ = {
                "tenantDisplayName": tenantDisplayName,
                "industryCode": industryCode,
                "purchasedModules": purchasedModules,
                "embeddableDomains": embeddableDomains,
                "customProperties": customProperties,
                "ssoInstanceIssuers": ssoInstanceIssuers,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tenantDisplayName"]) -> MetaOapg.properties.tenantDisplayName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["industryCode"]) -> MetaOapg.properties.industryCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["purchasedModules"]) -> 'UpdateTenantModelPurchasedModules': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["embeddableDomains"]) -> 'UpdateTenantModelEmbeddableDomains': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customProperties"]) -> 'UpdateTenantModelCustomProperties': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ssoInstanceIssuers"]) -> 'UpdateTenantModelSsoInstanceIssuers': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["tenantDisplayName", "industryCode", "purchasedModules", "embeddableDomains", "customProperties", "ssoInstanceIssuers", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tenantDisplayName"]) -> typing.Union[MetaOapg.properties.tenantDisplayName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["industryCode"]) -> typing.Union[MetaOapg.properties.industryCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["purchasedModules"]) -> typing.Union['UpdateTenantModelPurchasedModules', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["embeddableDomains"]) -> typing.Union['UpdateTenantModelEmbeddableDomains', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customProperties"]) -> typing.Union['UpdateTenantModelCustomProperties', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ssoInstanceIssuers"]) -> typing.Union['UpdateTenantModelSsoInstanceIssuers', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["tenantDisplayName", "industryCode", "purchasedModules", "embeddableDomains", "customProperties", "ssoInstanceIssuers", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        tenantDisplayName: typing.Union[MetaOapg.properties.tenantDisplayName, str, schemas.Unset] = schemas.unset,
        industryCode: typing.Union[MetaOapg.properties.industryCode, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        purchasedModules: typing.Union['UpdateTenantModelPurchasedModules', schemas.Unset] = schemas.unset,
        embeddableDomains: typing.Union['UpdateTenantModelEmbeddableDomains', schemas.Unset] = schemas.unset,
        customProperties: typing.Union['UpdateTenantModelCustomProperties', schemas.Unset] = schemas.unset,
        ssoInstanceIssuers: typing.Union['UpdateTenantModelSsoInstanceIssuers', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'UpdateTenantModel':
        return super().__new__(
            cls,
            *args,
            tenantDisplayName=tenantDisplayName,
            industryCode=industryCode,
            purchasedModules=purchasedModules,
            embeddableDomains=embeddableDomains,
            customProperties=customProperties,
            ssoInstanceIssuers=ssoInstanceIssuers,
            _configuration=_configuration,
            **kwargs,
        )

from visier_tenant_management_python_sdk.model.update_tenant_model_custom_properties import UpdateTenantModelCustomProperties
from visier_tenant_management_python_sdk.model.update_tenant_model_embeddable_domains import UpdateTenantModelEmbeddableDomains
from visier_tenant_management_python_sdk.model.update_tenant_model_purchased_modules import UpdateTenantModelPurchasedModules
from visier_tenant_management_python_sdk.model.update_tenant_model_sso_instance_issuers import UpdateTenantModelSsoInstanceIssuers
