# coding: utf-8

"""
    Visier Tenant Management APIs

    Visier APIs for managing tenants

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from visier_tenant_management_python_sdk.pydantic.business_location_dto import BusinessLocationDTO
from visier_tenant_management_python_sdk.pydantic.custom_property_dto import CustomPropertyDTO
from visier_tenant_management_python_sdk.pydantic.home_analysis_by_user_group_dto import HomeAnalysisByUserGroupDTO
from visier_tenant_management_python_sdk.pydantic.tenant_management_api_update_response_dto_embeddable_domains import TenantManagementAPIUpdateResponseDTOEmbeddableDomains
from visier_tenant_management_python_sdk.pydantic.tenant_management_api_update_response_dto_purchased_modules import TenantManagementAPIUpdateResponseDTOPurchasedModules
from visier_tenant_management_python_sdk.pydantic.tenant_management_api_update_response_dto_sso_instance_issuers import TenantManagementAPIUpdateResponseDTOSsoInstanceIssuers

class TenantManagementAPIUpdateResponseDTO(BaseModel):
    # The unique identifier of the newly created analytic tenant.
    tenant_code: typing.Optional[str] = Field(None, alias='tenantCode')

    # A comma-separated collection of strings that represent the Visier modules assigned to the new analytic tenant.
    tenant_display_name: typing.Optional[str] = Field(None, alias='tenantDisplayName')

    # The 6-digit NAICS code for the industry to which the analytic tenant belongs.
    industry_code: typing.Optional[int] = Field(None, alias='industryCode')

    # The primary location of operations or where business is performed. If undefined, it is omitted from the response.
    primary_business_location: typing.Optional[BusinessLocationDTO] = Field(None, alias='primaryBusinessLocation')

    purchased_modules: typing.Optional[TenantManagementAPIUpdateResponseDTOPurchasedModules] = Field(None, alias='purchasedModules')

    embeddable_domains: typing.Optional[TenantManagementAPIUpdateResponseDTOEmbeddableDomains] = Field(None, alias='embeddableDomains')

    # A list of objects that represent different customizable properties for the analytic tenant.
    custom_properties: typing.Optional[typing.List[CustomPropertyDTO]] = Field(None, alias='customProperties')

    sso_instance_issuers: typing.Optional[TenantManagementAPIUpdateResponseDTOSsoInstanceIssuers] = Field(None, alias='ssoInstanceIssuers')

    # The unique ID of the analysis to display for this tenant when a user logs in. This is optional.   Retrieve the ID by opening an analysis in the production version of a tenant and copying the string after the last forward slash (/) in the URL. For example: https://jupiter.visier.com/hr/prod/appcontainer?previewId=-eZPm8xvo3SUMpD4Q5pdE-6mCj9CQ9K699XgqRGwtOxagH5x2IzDFawlWn3hYqFEfU7nP0YK9ASEzmrNfAihGg..&previewType=Production#/analytics/myanalyses/8a4c1d4f-eb61-4da0-9e5b-55bef757c30e.  The `homeAnalysisID` is 8a4c1d4f-eb61-4da0-9e5b-55bef757c30e.   Alternatively, retrieve the ID by copying the `contentId` found by following the `Embed a visualization` documentation.
    home_analysis_id: typing.Optional[str] = Field(None, alias='homeAnalysisId')

    # A list of objects representing the analysis to display to specific user groups when users log in.
    home_analysis_by_user_group: typing.Optional[typing.List[HomeAnalysisByUserGroupDTO]] = Field(None, alias='homeAnalysisByUserGroup')

    # Whether the tenant is enabled or disabled. Enabled tenants have access to Visier visualizations.
    status: typing.Optional[str] = Field(None, alias='status')

    # A custom URL to redirect users into your portal to see the relevant content. This URL is used for links that are shared by and with your users through the sharing capability or email content.
    click_through_link: typing.Optional[str] = Field(None, alias='clickThroughLink')

    # The name of the administrating tenant used in Visier URLs.
    vanity_url_name: typing.Optional[str] = Field(None, alias='vanityUrlName')
    class Config:
        arbitrary_types_allowed = True
