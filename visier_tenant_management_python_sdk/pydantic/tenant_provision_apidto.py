# coding: utf-8

"""
    Visier Tenant Management APIs

    Visier APIs for managing tenants

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from visier_tenant_management_python_sdk.pydantic.custom_tenant_property_dto import CustomTenantPropertyDTO
from visier_tenant_management_python_sdk.pydantic.tenant_provision_apidto_embeddable_domains import TenantProvisionAPIDTOEmbeddableDomains
from visier_tenant_management_python_sdk.pydantic.tenant_provision_apidto_purchased_modules import TenantProvisionAPIDTOPurchasedModules
from visier_tenant_management_python_sdk.pydantic.tenant_provision_apidto_sso_instance_issuers import TenantProvisionAPIDTOSsoInstanceIssuers

class TenantProvisionAPIDTO(BaseModel):
    # The unique identifier of the analytic tenant.
    tenant_code: typing.Optional[str] = Field(None, alias='tenantCode')

    # The display name that is assigned to the analytic tenant.
    tenant_display_name: typing.Optional[str] = Field(None, alias='tenantDisplayName')

    purchased_modules: typing.Optional[TenantProvisionAPIDTOPurchasedModules] = Field(None, alias='purchasedModules')

    # The 6-digit NAICS code for the industry to which the analytic tenant belongs. If the code is unknown, type 000000.   For 2-digit codes, add trailing zeros at the end to reach 6 digits, such as 620000.
    industry_code: typing.Optional[int] = Field(None, alias='industryCode')

    embeddable_domains: typing.Optional[TenantProvisionAPIDTOEmbeddableDomains] = Field(None, alias='embeddableDomains')

    # A set of key-value pairs that represent different customizable properties for the analytic tenant.
    custom_properties: typing.Optional[typing.List[CustomTenantPropertyDTO]] = Field(None, alias='customProperties')

    sso_instance_issuers: typing.Optional[TenantProvisionAPIDTOSsoInstanceIssuers] = Field(None, alias='ssoInstanceIssuers')
    class Config:
        arbitrary_types_allowed = True
